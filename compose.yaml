x-keycloak-common-env: &keycloak-common-env
  WEBHOOK_HTTP_BASE_PATH: "http://prism:4010"
  WEBHOOK_HTTP_AUTH_USERNAME: "admin"
  WEBHOOK_HTTP_AUTH_PASSWORD: "password"

  # Preferred for cluster-aware client:
  WEBHOOK_AMQP_ADDRESSES: "rabbitmq1:5672,rabbitmq2:5672,rabbitmq3:5672"

  # Back-compat (your code prefers ADDRESSES when present)
  WEBHOOK_AMQP_HOST: rabbitmq1
  WEBHOOK_AMQP_PORT: 5672

  WEBHOOK_AMQP_USERNAME: username
  WEBHOOK_AMQP_PASSWORD: password
  WEBHOOK_AMQP_EXCHANGE: keycloak
  WEBHOOK_AMQP_VHOST: "/"
  # Optional: tweak handler defaults (your AmqpConfig can read these)
  WEBHOOK_AMQP_HEARTBEAT_SECONDS: "30"
  WEBHOOK_AMQP_WH_HANDLER_BUFFER_CAPACITY: "1000"
  WEBHOOK_AMQP_WH_HANDLER_INFLIGHT_CAPACITY: "1000"
  WEBHOOK_AMQP_WH_HANDLER_CONFIRM_TIMEOUT_MS: "15000"

  KEYCLOAK_ADMIN: admin
  KEYCLOAK_ADMIN_PASSWORD: password
  KC_LOG_CONSOLE_COLOR: 'true'

  WEBHOOK_SYSLOG_PROTOCOL: udp
  WEBHOOK_SYSLOG_HOSTNAME: keycloak
  WEBHOOK_SYSLOG_APP_NAME: keycloak_events
  WEBHOOK_SYSLOG_FACILITY: SYSLOG
  WEBHOOK_SYSLOG_SEVERITY: INFORMATIONAL
  WEBHOOK_SYSLOG_SERVER_HOSTNAME: syslog-ng
  WEBHOOK_SYSLOG_SERVER_PORT: 5514
  WEBHOOK_SYSLOG_MESSAGE_FORMAT: RFC_5424

x-keycloak-common-extra: &keycloak-common-extra
  entrypoint: /bin/sh
  command:
    - -c
    - |
      set -ex
      cp /tmp/libs-*/*-all.jar /opt/keycloak/providers # Copy the provider jars to the providers directory
      /opt/keycloak/bin/kc.sh start-dev --import-realm # Start Keycloak in dev mode and import the realm
  volumes:
    - ./.docker/keycloak-config/:/opt/keycloak/data/import/:ro
    - ./keycloak-webhook-provider-core/build/libs:/tmp/libs-core:ro
    - ./keycloak-webhook-provider-amqp/build/libs:/tmp/libs-amqp:ro
    - ./keycloak-webhook-provider-http/build/libs:/tmp/libs-http:ro
    - ./keycloak-webhook-provider-syslog/build/libs:/tmp/libs-syslog:ro
  links:
    - prism
    - syslog-ng
    - rabbitmq1
    - rabbitmq2
    - rabbitmq3

services:
  keycloak-21:
    image: quay.io/keycloak/keycloak:21.1.2
    ports: ["9021:9021"]
    environment:
      <<: *keycloak-common-env
      KC_HTTP_PORT: 9021
    <<: *keycloak-common-extra

  keycloak-22:
    image: quay.io/keycloak/keycloak:22.0.5
    ports: ["9022:9022"]
    environment:
      <<: *keycloak-common-env
      KC_HTTP_PORT: 9022
    <<: *keycloak-common-extra

  keycloak-23:
    image: quay.io/keycloak/keycloak:23.0.7
    ports: ["9023:9023"]
    environment:
      <<: *keycloak-common-env
      KC_HTTP_PORT: 9023
    <<: *keycloak-common-extra

  keycloak-24:
    image: quay.io/keycloak/keycloak:24.0.5
    ports: ["9024:9024"]
    environment:
      <<: *keycloak-common-env
      KC_HTTP_PORT: 9024
    <<: *keycloak-common-extra

  keycloak-25:
    image: quay.io/keycloak/keycloak:25.0.6
    ports: ["9025:9025"]
    environment:
      <<: *keycloak-common-env
      KC_HTTP_PORT: 9025
    <<: *keycloak-common-extra

  keycloak-26:
    image: quay.io/keycloak/keycloak:26.4.0
    ports: ["9026:9026"]
    environment:
      <<: *keycloak-common-env
      KC_HTTP_PORT: 9026
    <<: *keycloak-common-extra

  # ---------- RabbitMQ Cluster ----------
  rabbitmq1:
    image: rabbitmq:3-management
    hostname: rabbitmq1
    environment:
      RABBITMQ_NODENAME: rabbit@rabbitmq1
      RABBITMQ_ERLANG_COOKIE: a-very-secret-cookie
      RABBITMQ_DEFAULT_USER: username
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - ./.docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    ports:
      - "5672:5672"    # AMQP
      - "15672:15672"  # Management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  rabbitmq2:
    image: rabbitmq:3-management
    hostname: rabbitmq2
    environment:
      RABBITMQ_NODENAME: rabbit@rabbitmq2
      RABBITMQ_ERLANG_COOKIE: a-very-secret-cookie
      RABBITMQ_DEFAULT_USER: username
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - ./.docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    ports:
      - "5673:5672"    # AMQP
      - "15673:15672"  # Management UI
    depends_on:
      rabbitmq1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  rabbitmq3:
    image: rabbitmq:3-management
    hostname: rabbitmq3
    environment:
      RABBITMQ_NODENAME: rabbit@rabbitmq3
      RABBITMQ_ERLANG_COOKIE: a-very-secret-cookie
      RABBITMQ_DEFAULT_USER: username
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - ./.docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    ports:
      - "5674:5672"    # AMQP
      - "15674:15672"  # Management UI
    depends_on:
      rabbitmq1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
  # ---------- end RabbitMQ Cluster ----------

  # This is a mock server for the receiving end of the webhook
  prism:
    image: stoplight/prism:latest
    ports: ["4010:4010"]
    command: ["mock", "-h", "0.0.0.0", "/webhook.open-api.yml"]
    volumes:
      - ./openapi/webhook.open-api.yml:/webhook.open-api.yml
    restart: unless-stopped

  syslog-ng:
    image: lscr.io/linuxserver/syslog-ng
    environment:
      - TZ=Etc/Berlin
      - LOG_TO_STDOUT=true
    volumes:
      - .docker/syslog/log:/var/log
    restart: unless-stopped
